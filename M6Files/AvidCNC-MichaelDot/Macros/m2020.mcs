--    This will pass the (T)HC parameters in through the (comment)
function  m2020()
    local inst = mc.mcGetInstance('Script m2020 ') -- Pass in the script number, so we can see the commands called by this script in the log

	--Get the existing GCode comment lines if any
	local hHcCommand = mc.mcRegGetHandle(inst, string.format("ESS/HC/Command"))  

	local CurrentStr = mc.mcRegGetValueString(hHcCommand)
	--Get the current line number, and read in the line
    local LineNumber = mc.mcCntlGetGcodeLineNbr(inst)
    local LineNumberStr = mc.mcCntlGetGcodeLine(inst, LineNumber)
	
    --mc.mcCntlLog(inst, LineNumberStr, "", -1) -- This will send a message to the log window

    i = string.find(LineNumberStr, "%)" )
    if i == nil then
        mc.mcCntlLog(inst, '~~~~m2020() Could NOT find ")"', "", -1) 
    else
        LineNumberStr = LineNumberStr:sub(1, i)    -- This will remove the end of the string after the closing ')'
    end
	

    i = string.find(LineNumberStr, "%(" )
    if i == nil then
        mc.mcCntlLog(inst, '~~~~m2020() Could NOT find "("', "", -1) 
    else
        LineNumberStr = LineNumberStr:sub(i)    -- This will remove the beginning of the string before the comment starts '('
    end
    CurrentStr = string.format("%s %s",CurrentStr, LineNumberStr) 
	

	--Paste the GCode Line comment into the Laser_Raster_Command register (for processing)
	mc.mcRegSetValueString(hHcCommand, CurrentStr)   -- This will populate the GCode line data into the register

	
    mc.mcCntlLog(inst, '~~~~m2020() Loaded HC Command Parameter from Comment', "", -1) -- This will send a message to the log window
    mc.mcCntlLog(inst, LineNumberStr, "", -1) -- This will send a message to the log window
    --mc.mcCntlLog(inst, "", "", -1) -- This will send a BLANK LINE to the log window
end

if(mc.mcInEditor() == 1) then
    -- If you are in the mcLua editor, this will cause your script to execute if you Run or Debug 
    -- Make sure your Capitalization and numbers match that of the function you are calling 
    m2020()
end





